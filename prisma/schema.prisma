generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model sessions {
  user_id         Int
  session_id      String   @db.VarChar(255)
  expiration_date DateTime @db.Date
  @@id([user_id, session_id])
}

model upgrades {
  user_id      Int   @id
  damage       Int?  @default(0)
  attack_speed Int?  @default(0)
  turret_cost  Int   @default(0)
  users        users @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "upgrades_ibfk_1")
}

model users {
  id         Int       @id @default(autoincrement())
  username   String    @db.VarChar(255) @unique
  email      String    @db.VarChar(255) @unique
  password   String    @db.VarChar(255)
  coins      Int       @default(0)
  experience Int       @default(0)
  levels     levels[]
  skins      skins[]
  tempUp     tempUp[]
  upgrades   upgrades?
}

model skins {
  user_id   Int
  skin_type String @db.VarChar(255)
  type      Int    @default(1)
  users     users  @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "skins_user_id")

  @@id([user_id, skin_type])
}

model levels {
  user_id    Int
  level_id   Int
  difficulty Int   @default(0)
  users      users @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "levels_user_id")

  @@id([user_id, level_id])
}

model tempUp {
  user_id         Int
  temp_upgrade_id Int
  amount          Int   @default(0)
  users           users @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "tempup_users_id")

  @@id([user_id, temp_upgrade_id])
}
